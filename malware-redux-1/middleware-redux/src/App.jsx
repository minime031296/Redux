import { useState } from 'react'
import './App.css'
import { applyMiddleware, createStore } from 'redux';
import { useDispatch, useSelector } from 'react-redux';
import logger from "redux-logger";

const INCREMENT = "INCREMENT"
const DECREMENT = "DECREMENT" 
const countReducer = (state = 0, {type, payload}) => {
   switch(type) {
    case INCREMENT : 
    return state + payload;
    case DECREMENT : 
    return state - payload;
    default :
    return state;
   }
}

const myMiddleware = (store) => (next)=> (action)=> {
  console.log(`action: ${action.type}`)
  console.log(`prev: `,store.getState())
  console.log(`action: `, action)
  if(action.type === INCREMENT){
    action.payload = 5;
  }

  next(action)
  console.log(`next:`, store.getState())
}

const setIncrement = () => ({
  type: INCREMENT,
  payload: 1 
})
const setDecrement = () => ({
  type: DECREMENT,
  payload: 1 
})

export const store = createStore(countReducer, applyMiddleware(myMiddleware));

function App() {
  const dispatch = useDispatch()
  
  const count = useSelector((state)=> state)

  const handleIncrement = () => {
    dispatch(setIncrement())
  }

  const  handleDecrement = () => {
    dispatch(setDecrement())
  }

  return (
    <>
    <div className="div">
      <p>{count}</p>
      <button onClick={handleIncrement}>INC</button>
      <button onClick={handleDecrement}>dec</button>
    </div>
    </>
  )
}

export default App
